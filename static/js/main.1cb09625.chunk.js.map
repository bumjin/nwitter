{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","REACT_APP_API_ID","firebase","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","error","setError","newAccount","setNewAccount","onChange","event","console","log","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","doc","id","update","onDeleteClick","window","confirm","delete","refFromURL","attachmentUrl","toggleEditing","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","fileRef","ref","child","uid","uuid4","putString","response","getDownloadURL","createAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetsArray","docs","map","data","marginTop","key","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","newDisplayName","setNewDisplayName","history","useHistory","getMyNweets","where","orderBy","get","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","currentUser","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAMMA,G,kBAAiB,CACrBC,OAAQC,0CACRC,WAAYD,gCACZE,YAAaF,uCACbG,UAAWH,gBACXI,cAAeJ,4BACfK,kBAAmBL,eACnBM,MAAON,mfAAYO,mBAGrBC,gBAAuBV,GAEhB,IAAMW,EAAmBD,EAEnBE,EAAcF,SACdG,EAAYH,cACZI,EAAiBJ,YC6BfK,EAhDE,WAAO,IAAD,EACOC,mBAAS,IADhB,mBACZC,EADY,KACLC,EADK,OAEaF,mBAAS,IAFtB,mBAEZG,EAFY,KAEFC,EAFE,OAGOJ,mBAAS,IAHhB,mBAGZK,EAHY,KAGLC,EAHK,OAIiBN,oBAAS,GAJ1B,mBAIZO,EAJY,KAIAC,EAJA,KAKbC,EAAW,SAACC,GACdC,QAAQC,IAAIF,EAAMG,OAAOC,MADD,MAEYJ,EAA5BG,OAAUC,EAFM,EAENA,KAAMC,EAFA,EAEAA,MACX,UAATD,GACAZ,EAASa,GACE,aAATD,GACFV,EAAYW,IAGdC,EAAQ,uCAAG,WAAON,GAAP,SAAAO,EAAA,yDAEbP,EAAMQ,iBAFO,UAKLX,EALK,gCAOQX,EAAYuB,+BAA+BlB,EAAOE,GAP1D,sDAUQP,EAAYwB,2BAA2BnB,EAAOE,GAVtD,yEAaTG,EAAS,KAAMe,SAbN,0DAAH,sDAkBd,OACI,oCACI,0BAAML,SAAUA,EAAUM,UAAU,aAChC,2BAAOC,KAAK,OAAOT,KAAK,QAAQU,YAAY,QAAQC,UAAQ,EAACV,MAAOd,EAAOQ,SAAUA,EAAUa,UAAU,cACzG,2BAAOC,KAAK,WAAWT,KAAK,WAAWU,YAAY,WAAWC,UAAQ,EAACV,MAAOZ,EAAUM,SAAUA,EAAUa,UAAU,cACtH,2BAAOC,KAAK,SAASR,MAAOR,EAAa,qBAAuB,UAAWe,UAAU,yBACpFjB,GAAS,0BAAMiB,UAAU,aAAajB,IAG3C,0BAAMqB,QAVQ,kBAAMlB,GAAc,SAACmB,GAAD,OAAWA,MAUfL,UAAU,cACnCf,EAAa,UAAY,oB,eCJ3BqB,EAhCF,WACT,IAAMC,EAAa,uCAAG,WAAOnB,GAAP,iBAAAO,EAAA,4DAGL,YAFKH,EAAWJ,EAArBG,OAAUC,MAGdgB,EAAW,IAAInC,EAAiBoC,KAAKC,mBAGrB,WAATlB,IACPgB,EAAW,IAAInC,EAAiBoC,KAAKE,oBARvB,SAWCrC,EAAYsC,gBAAgBJ,GAX7B,yDAAH,sDAcnB,OACI,yBAAKR,UAAU,iBACX,kBAAC,IAAD,CACIa,KAAMC,IACNC,MAAO,UACPC,KAAK,KACLC,MAAO,CAAEC,aAAc,MAE3B,kBAAC,EAAD,MACA,yBAAKlB,UAAU,YACX,4BAAQI,QAASG,EAAef,KAAK,SAASQ,UAAU,WAAxD,uBAAsF,kBAAC,IAAD,CAAiBa,KAAMM,OAC7G,4BAAQf,QAASG,EAAef,KAAK,SAASQ,UAAU,WAAxD,uBAAsF,kBAAC,IAAD,CAAiBa,KAAMO,U,gBC8B9GC,EA5DD,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAAc,EACP7C,oBAAS,GADF,mBAC9B8C,EAD8B,KACrBC,EADqB,OAEL/C,mBAAS4C,EAASI,MAFb,mBAE9BC,EAF8B,KAEpBC,EAFoB,KAI/BlC,EAAQ,uCAAG,WAAON,GAAP,SAAAO,EAAA,6DACbP,EAAMQ,iBADO,SAEPrB,EAAUsD,IAAV,iBAAwBP,EAASQ,KAAMC,OAAO,CAChDL,KAAMC,IAHG,OAKbF,GAAW,GALE,2CAAH,sDAYRO,EAAa,uCAAG,sBAAArC,EAAA,0DACPsC,OAAOC,QAAQ,+CADR,gCAIR3D,EAAUsD,IAAV,iBAAwBP,EAASQ,KAAMK,SAJ/B,uBAKR3D,EAAe4D,WAAf,UAA6Bd,EAASe,gBAAiBF,SAL/C,2CAAH,qDAUbG,EAAgB,kBAAMb,GAAW,SAACpB,GAAD,OAAWA,MAElD,OACI,yBAAKL,UAAU,SACVwB,EACG,oCACI,0BAAM9B,SAAUA,EAAUM,UAAU,uBAChC,2BAAOC,KAAK,OAAOd,SAtBtB,SAACC,GAAW,IACPK,EAAYL,EAAtBG,OAAUE,MAClBmC,EAAYnC,IAoB2CS,YAAY,kBAAkBT,MAAOkC,EAAUxB,UAAQ,EAACoC,WAAS,EAACvC,UAAU,cACnH,2BAAOC,KAAK,SAASR,MAAM,eAAeO,UAAU,aAExD,0BAAMI,QAASkC,EAAetC,UAAU,qBAAxC,WAKJ,oCACI,4BAAKsB,EAASI,MACbJ,EAASe,eAAiB,yBAAKG,IAAKlB,EAASe,gBAC7Cd,GACG,yBAAKkB,MAAM,kBACP,4BAAQrC,QAAS4B,GAAe,kBAAC,IAAD,CAAiBnB,KAAM6B,OACvD,4BAAQtC,QAASkC,GAAe,kBAAC,IAAD,CAAiBzB,KAAM8B,W,QC4BpEC,EA1EM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACRnE,mBAAS,IADD,mBAC3BoE,EAD2B,KACpBC,EADoB,OAEErE,mBAAS,IAFX,mBAE3BsE,EAF2B,KAEfC,EAFe,KAG5BvD,EAAQ,uCAAG,WAAON,GAAP,qBAAAO,EAAA,yDACbP,EAAMQ,iBACFyC,EAAgB,GACD,KAAfW,EAHS,wBAIHE,EAAU1E,EAAe2E,MAAMC,MAArB,UAA8BP,EAAQQ,IAAtC,YAA6CC,gBAJpD,SAKcJ,EAAQK,UAAUP,EAAY,YAL5C,cAKHQ,EALG,gBAMaA,EAASL,IAAIM,iBAN1B,OAMTpB,EANS,sBAQPf,EAAW,CACbI,KAAMoB,EACNY,SAAUC,KAAKC,MACfC,UAAWhB,EAAQQ,IACnBhB,cAAeA,GAZN,UAcP9D,EAAUuF,WAAW,UAAUC,IAAIzC,GAd5B,QAebyB,EAAS,IACTE,EAAc,IAhBD,4CAAH,sDAwCd,OACI,0BAAMvD,SAAUA,EAAUM,UAAU,eAChC,yBAAKA,UAAU,2BACX,2BAAOA,UAAU,sBAAsBP,MAAOqD,EAAO3D,SAzBhD,SAACC,GAAW,IAEXK,EACVL,EADAG,OAAUE,MAEdsD,EAAStD,IAqBwEQ,KAAK,OAAOC,YAAY,uBAAuB8D,UAAW,MACnI,2BAAO/D,KAAK,SAASR,MAAM,SAASO,UAAU,yBAElD,2BAAOiE,QAAQ,cAAcjE,UAAU,uBACnC,4CACA,kBAAC,IAAD,CAAiBa,KAAMqD,OAE3B,2BAAOpC,GAAG,cAAc7B,KAAK,OAAOkE,OAAO,UAAUhF,SAtBxC,SAACC,GAAW,IAEvBgF,EADwBhF,EAAtBG,OAAU8E,MACI,GAEhBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAAmB,IACVC,EAAaD,EAA9BE,cAAiBD,OACzBzB,EAAcyB,IAGlBJ,EAAOM,cAAcR,IAY4DnD,MAAO,CAChF4D,QAAS,KAGZ7B,GACG,yBAAKhD,UAAU,2BAEX,yBAAKwC,IAAKQ,EAAY/B,MAAO,CACzB6D,gBAAiB9B,KAErB,yBAAKhD,UAAU,qBAAqBI,QApC1B,WACtB6C,EAAc,QAoCE,wCACA,kBAAC,IAAD,CAAiBpC,KAAMkE,UCtChCC,EA3BF,SAAC,GAAiB,IAAfnC,EAAc,EAAdA,QAAc,EACEnE,mBAAS,IADX,mBACnBuG,EADmB,KACXC,EADW,KAe1B,OAZAC,qBAAU,WACN5G,EAAUuF,WAAW,UAAUsB,YAAW,SAAAC,GAEtC,IAAMC,EAAcD,EAASE,KAAKC,KAAI,SAAA3D,GAAG,oBACrCC,GAAID,EAAIC,IACLD,EAAI4D,WAEXP,EAAUI,QAEf,IAIC,yBAAKtF,UAAU,aACX,kBAAC,EAAD,CAAc6C,QAASA,IACvB,yBAAK5B,MAAO,CAAEyE,UAAW,KACpBT,EAAOO,KAAI,SAAA1C,GAAK,OACb,kBAAC,EAAD,CAAO6C,IAAK7C,EAAMhB,GAAIR,SAAUwB,EAAOvB,QAASuB,EAAMe,YAAchB,EAAQQ,YCOjFuC,EA5BI,SAAC,GAAD,IAAG/C,EAAH,EAAGA,QAAH,OAAiB,6BAChC,6BACI,wBAAI5B,MAAO,CAAE4E,QAAS,OAAQC,eAAgB,SAAUJ,UAAW,KAC/D,4BACI,kBAAC,IAAD,CAAMK,GAAG,IAAI9E,MAAO,CAAE+E,YAAa,KAC/B,kBAAC,IAAD,CAAiBnF,KAAMC,IAAWC,MAAO,UAAWC,KAAK,SAGjE,4BACI,kBAAC,IAAD,CAAM+E,GAAG,WAAW9E,MAAO,CACvBgF,WAAY,GACZJ,QAAS,OACTK,cAAe,SACfC,WAAY,SACZC,SAAU,KAEV,kBAAC,IAAD,CAAiBvF,KAAMwF,IAAQtF,MAAO,UAAWC,KAAK,OACtD,0BAAMC,MAAO,CAAEyE,UAAW,KACrB7C,EAAQyD,YAAR,UACQzD,EAAQyD,YADhB,kBAEK,iBCwBfC,EA9CC,SAAC,GAA8B,IAA5B1D,EAA2B,EAA3BA,QAAS2D,EAAkB,EAAlBA,YAAkB,EACE9H,mBAASmE,EAAQyD,aADnB,mBACnCG,EADmC,KACnBC,EADmB,KAEpCC,EAAUC,cAMVC,EAAW,uCAAG,sBAAAlH,EAAA,sEACKpB,EAChBuF,WAAW,UACXgD,MAAM,YAAa,KAAMjE,EAAQQ,KACjC0D,QAAQ,YACRC,MALW,yDAAH,qDAOjB7B,qBAAU,WACN0B,MACD,IAEH,IAIMnH,EAAQ,uCAAG,WAAON,GAAP,SAAAO,EAAA,yDACbP,EAAMQ,iBACFiD,EAAQyD,cAAgBG,EAFf,gCAGH5D,EAAQoE,cAAc,CACxBX,YAAaG,IAJR,OAMTD,IANS,2CAAH,sDASd,OACI,yBAAKxG,UAAU,aACX,0BAAMN,SAAUA,EAAUM,UAAU,eAChC,2BAAOC,KAAK,OAAOsC,WAAS,EAACpD,SAhBxB,SAACC,GAAW,IACPK,EAAYL,EAAtBG,OAAUE,MAClBiH,EAAkBjH,IAcuCS,YAAY,eAAeT,MAAOgH,EAAgBzG,UAAU,cAC7G,2BAAOC,KAAK,SAASR,MAAM,iBAAiBO,UAAU,UAClDiB,MAAO,CACHyE,UAAW,OAGvB,4BAAQ1F,UAAU,2BAA2BI,QAtC/B,WAClB9B,EAAY4I,UACZP,EAAQQ,KAAK,OAoCT,aCEGC,EAtCG,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,WAAYxE,EAA2B,EAA3BA,QAAS2D,EAAkB,EAAlBA,YACtC,OACI,kBAAC,IAAD,KACKa,GAAc,kBAAC,EAAD,CAAYxE,QAASA,IACpC,kBAAC,IAAD,KACKwE,EAEO,yBACIpG,MAAO,CACHqG,SAAU,IACVC,MAAO,OACPC,OAAQ,SACR9B,UAAW,GACXG,QAAS,OACTC,eAAgB,WAGpB,kBAAC,IAAD,CAAO2B,OAAK,EAACC,KAAK,KACd,kBAAC,EAAD,CAAM7E,QAASA,KAEnB,kBAAC,IAAD,CAAO4E,OAAK,EAACC,KAAK,YACd,kBAAC,EAAD,CAAS7E,QAASA,EAAS2D,YAAaA,KAE5C,kBAAC,IAAD,CAAUmB,KAAK,IAAI5B,GAAG,OAG1B,oCACI,kBAAC,IAAD,CAAO0B,OAAK,EAACC,KAAK,KACd,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAUC,KAAK,IAAI5B,GAAG,UCInC6B,MAtCf,WAAgB,IAAD,EACWlJ,oBAAS,GADpB,mBACNmJ,EADM,KACAC,EADA,OAEiBpJ,mBAAS,MAF1B,mBAENmE,EAFM,KAEGkF,EAFH,KA8Bb,OA1BA5C,qBAAU,WACR7G,EAAY0J,oBAAmB,SAAUC,GAIrCF,EAHEE,EAGS,CACT3B,YAAa2B,EAAK3B,YAClBjD,IAAK4E,EAAK5E,IACV4D,cAAe,SAACiB,GAAD,OAAUD,EAAKhB,cAAciB,KAInC,MAEbJ,GAAQ,QAET,IAWD,oCACGD,EAAO,kBAAC,EAAD,CAAWR,WAAYc,QAAQtF,GAAUA,QAASA,EAAS2D,YAXnD,WAClB,IAAMyB,EAAO3J,EAAY8J,YAEzBL,EAAW,CACTzB,YAAa2B,EAAK3B,YAClBjD,IAAK4E,EAAK5E,IACV4D,cAAe,SAACiB,GAAD,OAAUD,EAAKhB,cAAciB,SAKgE,mBAC5G,wCAAe,IAAIvE,MAAO0E,cAA1B,c,MC/BNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.1cb09625.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_API_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_API_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_API_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_API_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_API_MESSAGEN_ID,\r\n  appId: process.env.REACT_APP_API_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, { useState } from \"react\";\r\nimport { authService } from \"../fbase\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const onChange = (event) => {\r\n        console.log(event.target.name)\r\n        const { target: { name, value } } = event;\r\n        if (name === 'email') {\r\n            setEmail(value);\r\n        } if (name === 'password') {\r\n            setPassword(value)\r\n        }\r\n    }\r\n    const onSubmit = async (event) => {\r\n        //console.log(event.target.name)\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n                //create account\r\n                data = await authService.createUserWithEmailAndPassword(email, password)\r\n\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(email, password)\r\n            }\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    }\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev)\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input type=\"text\" name=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\"></input>\r\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\"></input>\r\n                <input type=\"submit\" value={newAccount ? \"Create New Account\" : \"Sign In\"} className=\"authInput authSubmit\"></input>\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"Sign In\" : \"Create Account\"}\r\n            </span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AuthForm","import { authService, firebaseInstance } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport AuthForm from \"components/AuthForm\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faTwitter,\r\n    faGoogle,\r\n    faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const { target: { name } } = event;\r\n        let provider\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n            //provider.addScope('https://www.googleapis.com/auth/contacts.readonly');\r\n\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n\r\n        const data = await authService.signInWithPopup(provider);\r\n    }\r\n\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm></AuthForm>\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">Continue With Google<FontAwesomeIcon icon={faGoogle} /></button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">Continue With GitHub<FontAwesomeIcon icon={faGithub} /></button>\r\n            </div>\r\n\r\n        </div>)\r\n}\r\n\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false)\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text)\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet\r\n        })\r\n        setEditing(false)\r\n    }\r\n    const onChange = (event) => {\r\n        const { target: { value } } = event;\r\n        setNewNweet(value);\r\n    }\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm('Are you sure you want to delete this tweet?')\r\n        if (ok) {\r\n            //delete nweet\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete()\r\n            await storageService.refFromURL(`${nweetObj.attachmentUrl}`).delete()\r\n\r\n        }\r\n    }\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n    return (\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input type=\"text\" onChange={onChange} placeholder=\"Edit your nweet\" value={newNweet} required autoFocus className=\"formInput\"></input>\r\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\"></input>\r\n                    </form>\r\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                        Cancel\r\n                    </span>\r\n                </>\r\n            ) :\r\n                <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} ></img>}\r\n                    {isOwner && (\r\n                        <div class=\"nweet__actions\">\r\n                            <button onClick={onDeleteClick}><FontAwesomeIcon icon={faTrash} /></button>\r\n                            <button onClick={toggleEditing}><FontAwesomeIcon icon={faPencilAlt} /></button>\r\n                        </div>\r\n                    )\r\n                    }\r\n                </>\r\n            }\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Nweet","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuid4 } from \"uuid\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\")\r\n    const [attachment, setAttachment] = useState(\"\")\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let attachmentUrl = '';\r\n        if (attachment !== '') {\r\n            const fileRef = storageService.ref().child(`${userObj.uid}/${uuid4()}`)\r\n            const response = await fileRef.putString(attachment, \"data_url\")\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl: attachmentUrl\r\n        }\r\n        await dbService.collection(\"nweets\").add(nweetObj)\r\n        setNweet(\"\")\r\n        setAttachment(\"\");\r\n    }\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value }\r\n        } = event;\r\n        setNweet(value)\r\n    }\r\n    const onClearAttachment = () => {\r\n        setAttachment(null)\r\n    }\r\n\r\n    const onFileChange = (event) => {\r\n        const { target: { files } } = event;\r\n        const theFile = files[0];\r\n        //console.log(file)\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const { currentTarget: { result } } = finishedEvent;\r\n            setAttachment(result)\r\n        }\r\n\r\n        reader.readAsDataURL(theFile);\r\n    }\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input className=\"factoryInput__input\" value={nweet} onChange={onChange} type=\"text\" placeholder=\"What's on your mind?\" maxLength={120} />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input id=\"attach-file\" type=\"file\" accept=\"image/*\" onChange={onFileChange} style={{\r\n                opacity: 0\r\n            }}></input>\r\n\r\n            {attachment &&\r\n                <div className=\"factoryForm__attachment\">\r\n\r\n                    <img src={attachment} style={{\r\n                        backgroundImage: attachment\r\n                    }}></img>\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            }\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nexport default NweetFactory;","import { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Nweet from \"components/Nweet\"\r\n\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([])\r\n\r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot(snapshot => {\r\n            //console.log(snapshot.docs);\r\n            const nweetsArray = snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data()\r\n            }))\r\n            setNweets(nweetsArray)\r\n        })\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj}></NweetFactory>\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map(nweet => (\r\n                    <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid}>\r\n                    </Nweet>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Home;","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nconst Navigation = ({ userObj }) => <nav>\r\n    <nav>\r\n        <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n            <li>\r\n                <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/profile\" style={{\r\n                    marginLeft: 10,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    fontSize: 12,\r\n                }}>\r\n                    <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                    <span style={{ marginTop: 10 }}>\r\n                        {userObj.displayName\r\n                            ? `${userObj.displayName}의 Profile`\r\n                            : \"Profile\"}\r\n                    </span>\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n</nav>\r\n\r\nexport default Navigation;","import React, { useEffect, useState } from \"react\";\r\nimport { authService, dbService } from \"fbase\"\r\nimport { useHistory } from \"react-router-dom\";\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName)\r\n    const history = useHistory();\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\")\r\n        //refreshUser();\r\n    }\r\n    const getMyNweets = async () => {\r\n        const nweets = await dbService\r\n            .collection(\"nweets\")\r\n            .where(\"creatorId\", \"==\", userObj.uid)\r\n            .orderBy(\"createAt\")\r\n            .get()\r\n    }\r\n    useEffect(() => {\r\n        getMyNweets();\r\n    }, [])\r\n\r\n    const onChange = (event) => {\r\n        const { target: { value } } = event;\r\n        setNewDisplayName(value);\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName\r\n            })\r\n            refreshUser();\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input type=\"text\" autoFocus onChange={onChange} placeholder=\"Display Name\" value={newDisplayName} className=\"formInput\"></input>\r\n                <input type=\"submit\" value=\"Update Profile\" className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}></input>\r\n            </form>\r\n            <button className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>Log Out</button>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\n//hooks component\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ?\r\n                    (\r\n                        <div\r\n                            style={{\r\n                                maxWidth: 890,\r\n                                width: \"100%\",\r\n                                margin: \"0 auto\",\r\n                                marginTop: 80,\r\n                                display: \"flex\",\r\n                                justifyContent: \"center\",\r\n                            }}\r\n                        >\r\n                            <Route exact path=\"/\">\r\n                                <Home userObj={userObj}></Home>\r\n                            </Route>\r\n                            <Route exact path=\"/profile\">\r\n                                <Profile userObj={userObj} refreshUser={refreshUser}></Profile>\r\n                            </Route>\r\n                            <Redirect from=\"*\" to=\"/\"></Redirect>\r\n                        </div>\r\n                    ) : (\r\n                        <>\r\n                            <Route exact path=\"/\">\r\n                                <Auth></Auth>\r\n                            </Route>\r\n                            <Redirect from=\"*\" to=\"/\"></Redirect>\r\n                        </>\r\n                    )\r\n                }\r\n            </Switch>\r\n        </Router>)\r\n}\r\n\r\nexport default AppRouter","import React, { useState, useEffect } from 'react';\r\nimport AppRouter from 'components/Router';\r\nimport { authService } from 'fbase';\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged(function (user) {\r\n      if (user) {\r\n        // User is signed in.\r\n        //setUserObj(user);\r\n        setUserObj({\r\n          displayName: user.displayName,\r\n          uid: user.uid,\r\n          updateProfile: (args) => user.updateProfile(args)\r\n        });\r\n      } else {\r\n        // No user is signed in.\r\n        setUserObj(null);\r\n      }\r\n      setInit(true)\r\n    });\r\n  }, [])\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    //setUserObj(Object.assign({}, user))\r\n    setUserObj({\r\n      displayName: user.displayName,\r\n      uid: user.uid,\r\n      updateProfile: (args) => user.updateProfile(args)\r\n    })\r\n  }\r\n  return (\r\n    <>\r\n      {init ? <AppRouter isLoggedIn={Boolean(userObj)} userObj={userObj} refreshUser={refreshUser}></AppRouter> : \"Initializing....\"}\r\n      <footer>&copy;{new Date().getFullYear()} Nwitter</footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport \"./styles.css\";\r\n\r\n//console.log(firebase)\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}